import Head from "next/head"
import Image from "next/image"
import { useState, useEffect } from "react"
// Styled components
import { Main } from "../styles/mis-cursos.styled"
// Components
import { Header, Typography, SideNav, Footer, Button } from "../components"
import { withIronSessionSsr } from "iron-session/next"
import {
  sessionOptions,
  sessionVerificationNotCreated,
} from "../../lib/session"
// Store
import { useAppSelector, useAppDispatch } from "../store"
// API LOCAL
import { UserApi } from "./api"
import { loadCourses } from "../store/User/actions"
import { useRouter } from "next/router"
import { FaUserAlt } from "react-icons/fa"


const items = [1, 2, 3, 4]

export default function MyCoursesPage(props: any) {
  const dispatch = useAppDispatch()
  const router = useRouter()
  const [coursesList, setCourseslist] = useState([])

  useEffect(() => {
    const UserpiModel = new UserApi()
      ; (async () => {
        if (props.user.id) {
          const response = await UserpiModel.GetMyCourses(props.user.id)
          if (response.status === 200) {
            dispatch(loadCourses(response.data.courses))
            setCourseslist(response.data.courses)
          }
        }
      })()
  }, [dispatch, props.user])



  return (
    <>
      <Head>
        <title>Ambly</title>
        <meta name="description" content="Generated by Ambly" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <SideNav />
        <Header />

        <div className="content-page">
          <Typography text="Mis Cursos" variant="H5" />

          <div className="my-courses-list">
            {/* {coursesList.length === 0 && (
              <section className="emptyCourses">

                <Typography
                  text="AÃºn no tienes cursos disponibles..."
                  variant="H2"
                  style={{ textAlign: "center" }}
                />
                <Button
                  text="Descrubre los cursos"
                  bg
                  color="redPrimary"
                  style={{width : 250,}}
                  onClick={() => router.push('/cursos/todos')}
                />
              </section>
            )} */}

            {coursesList.map((item: any, index) => (
              <section key={index} className="course-item" onClick={() => router.push(`/curso/${item.id}`)}>
                <Image
                  className="image-name"
                  src={item.image_course}
                  height={500}
                  width={500}
                  alt=""
                />
                <div className="course-content">
                  <Typography
                    text={item.name_course}
                    variant="H1"
                    className="course-title"
                  />
                  <div className="course-datails">
                    <p>
                      {item?.modules.length} {item.modules.length > 1 ? 'Modulos' : 'Modulo'} - {item.time_course}
                    </p>
                  </div>
                  <div className="autor">
                    <FaUserAlt className="icon" />
                    <span>{item?.instructor?.name_instructor}</span>
                  </div>
                  
                </div>
                <div className="overlay"></div>
              </section>
            ))}
          </div>
        </div>
        <Footer />
      </Main>
    </>
  )
}

export const getServerSideProps = withIronSessionSsr(
  sessionVerificationNotCreated,
  sessionOptions
)
