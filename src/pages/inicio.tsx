import Head from "next/head"
import { useRouter } from "next/router"
// Styled components
import { Main } from "../styles/index.styled"
import Image from "next/image"
import IconAmbly from "../assets/images/icon-ambly.png"
import GooglePlay from "../assets/images/google-play.png"
import AppStore from "../assets/images/app-store.png"
// Components
import { Button, Typography } from "../components"
import { withIronSessionSsr } from "iron-session/next"
import { sessionOptions, sessionVerificationCreated } from "../../lib/session"
import { auth, facebook, google } from '../firebase/firebaseConfig'
import { signInWithPopup } from "firebase/auth"
import { AuthApi } from "./api"

import { FaGoogle } from "react-icons/fa";
import { FaFacebook } from "react-icons/fa";

export default function Home() {
  const router = useRouter()
  // const AuthApiModel = new AuthApi()

  // const signInWithGoogle = () => {
  //   signInWithPopup(auth, google)
  //     .then(async (result) => {
  //       const user = result.user;
  //       console.log(user);
  //       let response = await AuthApiModel.UserLoginGoogle(user?.email)
  //       if (response.status === 204) {
  //         response = await AuthApiModel.UserRegistryGoogle({
  //           email: user?.email,
  //           name: user?.displayName
  //         })
  //       }
  //       // Respuesta satisfactoria tanto para registro como para login
  //       if (response.status === 200 || response.status === 201) {
  //         router.replace('/')
  //       }


  //     })
  //     .catch((error) => {
  //       console.error(error);
  //     });
  // }
  // function signInWithFacebook() {
  //   signInWithPopup(auth, facebook)
  //     .then((result) => {
  //       console.log(result);

  //       const user = result.user;
  //       console.log(user);
  //     })
  //     .catch((error) => {
  //       console.error(error);
  //     });
  // }

  return (
    <>
      <Head>
        <title>Ambly</title>
        <meta name="description" content="Generated by Ambly" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <div className="contain">
          <Image className="icon" src={IconAmbly} alt="" />
          <div className="init-session">
            <Typography
              text="Crea una cuenta para continuar"
              variant="H6"
              style={{ marginBottom: "2em", fontSize: "1.2em" }}
            />
            <Button
              className="buttonInitial"
              text="Crear con correo electrónico"
              bg
              color="redPrimary"
              onClick={() => router.push("registro")}
            />
            <Button
              className="buttonInitial"
              text="Accede a tu cuenta"
              style={{
                textDecoration: "underline",
                textAlign: "center",
                margin: "1em",
              }}
              onClick={() => router.push("login")}
            />
            {/* <div className="socialButtons">
              <button className="buttonSocial" onClick={() => signInWithGoogle()}><FaGoogle /> Iniciar sesión con Google</button>
              <button className="buttonSocial" onClick={() => signInWithFacebook()}><FaFacebook /> Iniciar sesión con Facebook</button>

            </div> */}

            <Button
              className="buttonInitial"
              text="Explora nuestros cursos"
              bg
              color="ligth"
              style={{ color: "#000000" }}
              onClick={() => router.push("/")}
            />
          </div>

          <div className="shops-section">
            <Typography
              text="Descarga nuestra app en todas las plataformas"
              variant="P"
              style={{ fontSize: "1.1rem" }}
            />
            <div className="shops">
              <a href="#">
                <Image className="icon" src={GooglePlay} alt="" />
              </a>

              <a href="#">
                <Image className="icon" src={AppStore} alt="" />
              </a>
            </div>
          </div>
        </div>
      </Main>
    </>
  )
}

export const getServerSideProps = withIronSessionSsr(
  sessionVerificationCreated,
  sessionOptions
)
