import Head from "next/head"
import Image from "next/image"
import { useState, useEffect } from "react"
import Link from "next/link"
// Assests
// Styled components
import { Main } from "../styles/categorias.styled"
// Components
import { Header, Typography, SideNav, Footer, Loader } from "../components"
import { withIronSessionSsr } from "iron-session/next"
import {
  sessionOptions,
  getSessionVerificationNotCreated,
} from "../../lib/session"
import { UserApi } from "./api"
import { useAppDispatch, useAppSelector } from "../store"
import { loadCourses } from "../store/User/actions"

const UserApiModel = new UserApi()

export default function Login(props: any) {
  const dispatch = useAppDispatch()
  const [topics, setTopics] = useState([])
  const [loading, setLoading] = useState(false)

  useEffect(() => {
    ;(async () => {
      if (props.user.id) {
        const response = await UserApiModel.GetMyCourses(props.user.id)
        if (response.status === 200) {
          dispatch(loadCourses(response.data.courses))          
        }
      }
    })()
  }, [dispatch, props.user])

  useEffect(() => {
    setLoading(true)
    ;(async () => {
      const response = await UserApiModel.GetCategories()
      response.status === 200 && setTopics(response.data)
    })()
    setLoading(false)
  }, [])
  
  return (
    <>
      <Head>
        <title>Ambly</title>
        <meta name="description" content="Generated by Ambly" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Loader loading={loading} />
        <SideNav minimal={!props.user} />
        <Header minimal={!props.user} />

        <div className="content-page">
          <Typography text="CategorÃ­as" variant="H5" />
          <br />
          <br />
          <div className="category-list">
            {topics.map((item: any, index: number) => (
                 <Link
                 href={`/cursos/${item.name}`}
                 key={index}
                 className="category-item"
               >
                 <div className="dark-overlay" />
                 <Image
                   className="category-image"
                   src={item.image}
                   alt=""
                   height={500}
                   width={500}
                 />
                 <small className="categoryName">{item.name}</small>
               </Link>
            ))}
          </div>
        </div>
        <Footer />
      </Main>
    </>
  )
}

export const getServerSideProps = withIronSessionSsr(
  getSessionVerificationNotCreated,
  sessionOptions
)
