import Head from "next/head"
import Image from "next/image"
// Assests
import ImageCourse from "../../..//assets/images/new-course.jpg"
// Styled components
import { Main } from "../../../styles/modulo.styled"
// Components
import { Header, Typography, SideNav, ModulesList } from "../../../components"
import { MdPictureAsPdf } from "react-icons/md"
import { HiDownload } from "react-icons/hi"
import { BsFillPlayFill } from "react-icons/bs"
import {
  TbPlayerSkipBackFilled,
  TbPlayerSkipForwardFilled,
} from "react-icons/tb"
import { withIronSessionSsr } from "iron-session/next"
import {
  sessionOptions,
  sessionVerificationNotCreated,
} from "../../../../lib/session"

const items = [1, 2, 3, 4]

const FileItem = () => {
  return (
    <div className="file-item">
      <div className="item-info">
        <MdPictureAsPdf className="icon" />
        <div className="item-content">
          <Typography text="Guia de clase" variant="H6" />
        </div>
      </div>
      <div className="action">
        <HiDownload className="action-icon" />
      </div>
    </div>
  )
}

export default function Modulo() {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <SideNav />
        <Header />

        <div className="page-content">
          <div className="page-top">
            <video
              className="page-top-video"
              controls
              src="https://app-ambly.s3.amazonaws.com/static/uploads/57865ccfb2df78a10ec0-pexels-pressmaster-3209828-3840x2160-25fps.mp4"
            ></video>
            <div className="page-top-content">
              <div>
                <Typography text="Video 1" variant="H2" />
                <Typography
                  text="Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book."
                  variant="P"
                />
              </div>
              <div className="action-buttons">
                <button className="action-button">
                  <TbPlayerSkipBackFilled className="icon" />
                  Anterior
                </button>
                <button className="action-button">
                  Siguiente
                  <TbPlayerSkipForwardFilled className="icon" />
                </button>
              </div>
            </div>
          </div>
          <div className="page-module-content">
            <div className="fileslist-contain">
              <Typography text="Modulos" variant="H4" className="title" />

              <div className="list-files">
                {items.map((item) => (
                  <FileItem key={item} />
                ))}
              </div>
            </div>
            <div className="moduleslist-contain">
              <Typography
                text="Video del modulo"
                variant="H4"
                className="title"
              />
              <div className="list-videos">
                <div className="video-item">
                  <div className="video-image-contain">
                    <BsFillPlayFill className="icon-play" />
                    <Image className="video-image" src={ImageCourse} alt="" />
                  </div>
                  <div className="video-content">
                    <Typography text="titulo del modulo" variant="H6" />
                    <Typography text="3:00:00 minutos" variant="P" />
                  </div>
                </div>
              </div>
              <Typography
                text="Todos los modulos"
                variant="H4"
                className="title"
              />
              <ModulesList />
            </div>
          </div>
        </div>
      </Main>
    </>
  )
}

export const getServerSideProps = withIronSessionSsr(
  sessionVerificationNotCreated,
  sessionOptions
)
