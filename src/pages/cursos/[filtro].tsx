import Head from "next/head"
import Image from "next/image"
import { useEffect, useState } from "react"
import { useRouter } from "next/router"
// Styled components
import { Main } from "../../styles/cursos-populares.styled"
// Components
import {
  Header,
  Typography,
  SideNav,
  Loader,
  Footer,
  Button,
} from "../../components"
import { FaUserAlt } from "react-icons/fa"
import { withIronSessionSsr } from "iron-session/next"
import {
  sessionOptions,
  getSessionVerificationNotCreated,
} from "../../../lib/session"
import Swal from "sweetalert2"

import { CourseApi } from "../api"
import { log } from "console"
const CourseApiModel = new CourseApi()

export default function Login(props: any) {
  const [coursesList, setCourses] = useState([])
  const router = useRouter()

  const [loading, setLoading] = useState(false)

  useEffect(() => {
    getCourses()
  }, [])

  const getCourses = async () => {
    setLoading(true)
    const response = await CourseApiModel.GetCourses()
    response.status === 200 && setCourses(response.data)
    setLoading(false)
  }

  const addCart = (id: any) => {
    setLoading(true)
    const stored = localStorage.getItem("cart_products")

    if (stored) {
      const cart_products: Array<any> = JSON.parse(stored)
      cart_products.push(id)
      console.log(cart_products)
      localStorage.setItem("cart_products", JSON.stringify(cart_products))
    } else {
      localStorage.setItem("cart_products", JSON.stringify([id]))
    }
    getCourses()
    setTimeout(() => {
      setLoading(false)
      Swal.fire("Â¡Curso agregado al carrito de compras!")
    }, 300)
  }

  const includeCourse = (id: any) => {
    let include = false
    let stored: any = localStorage.getItem("cart_products")

    if (stored) {
      stored = JSON.parse(stored)
      console.log(stored)
      stored.map((element: any) => {
        if (element === id) {
          include = true
        }
      })
    }
    return include
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Main>
        <Loader loading={loading} />
        <SideNav minimal={!props.user} />
        <Header minimal={!props.user} />

        <div className="content-page">
          <Typography text="Todos los cursos" variant="H5" />

          <div className="my-courses-list">
            {coursesList.map((item: any, index: number) => (
              <section key={index} className="course-item">
                <div className="hover-content">
                  <Button
                    text="Ir a curso"
                    onClick={() => router.push(`/curso/${item.id}`)}
                    style={{ textDecoration: "underline" }}
                  />
                  {!includeCourse(item.id) && (
                    <Button
                      text="Agregar a carrito"
                      bg
                      color="redPrimary"
                      variant="sm"
                      onClick={() => addCart(item.id)}
                    />
                  )}
                </div>
                <Image
                  className="image-course"
                  src={item?.image_course}
                  height={500}
                  width={500}
                  alt=""
                />
                <div className="course-content">
                  <Image
                    className="image-name"
                    src={item?.image_name}
                    height={500}
                    width={500}
                    alt=""
                  />
                  <div className="autor">
                    <FaUserAlt className="icon" />
                    <span>{item?.instructor?.name_instructor}</span>
                  </div>
                </div>
                <div className="overlay"></div>
              </section>
            ))}
          </div>
        </div>
        <Footer />
      </Main>
    </>
  )
}

export const getServerSideProps = withIronSessionSsr(
  getSessionVerificationNotCreated,
  sessionOptions
)
